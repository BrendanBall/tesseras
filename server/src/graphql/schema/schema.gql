type Query {
    tickets: [Ticket!]!
    users: [User!]!
    tags: [Tag!]!
}

type Mutation {
    createTicket(input: TicketInput!): Ticket
    updateTicket(id: ID!, input: TicketInput!): Ticket
    createUser(input: UserInput!): User
    updateUser(id: ID!, input: UserInput!): User
    createTag(input: TagInput!): Tag
    updateTag(id: ID!, input: TagInput!): Tag
}

scalar DateTime

type Ticket {
    id: ID!
    title: String
    description: String
    createdAt: DateTime!
    modifiedAt: DateTime
    createdBy: User!
    assignedTo: User
    tags: [Tag!]!
}

input TicketInput {
    title: String!
    description: String!
    createdByUserId: ID!
    tags: [TagInput!]
}

type Tag {
    id: ID!
    name: String!
    description: String
}

input TagInput {
    id: ID
    name: String
    description: String
}

type User {
    id: ID!
    username: String
    name: String
}

input UserInput {
    username: String
    name: String
}
